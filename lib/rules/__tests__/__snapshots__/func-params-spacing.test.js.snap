// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`func-params-spacing applies fixes to callbacks 1`] = `
Object {
  "errorCount": 0,
  "results": Array [
    Object {
      "errorCount": 0,
      "filePath": "/Users/neil/Projects/personal/eslint-plugin-wyze/lib/rules/__tests__/fixtures/func-params-spacing/callbacks.js",
      "messages": Array [],
      "output": "
const a = b.reduce(( c, d ) => c + d, 0)
const a = b.reduce(( c, d ) => c + d, 0)
const a = b.reduce(( c, d ) => c + d, 0)
const a = b.reduce(() => Math.random(5), 0)
const a = b.reduce(function ( c, d ) { c + d }, 0)
",
      "warningCount": 0,
    },
  ],
  "warningCount": 0,
}
`;

exports[`func-params-spacing applies fixes to classes 1`] = `
Object {
  "errorCount": 0,
  "results": Array [
    Object {
      "errorCount": 0,
      "filePath": "/Users/neil/Projects/personal/eslint-plugin-wyze/lib/rules/__tests__/fixtures/func-params-spacing/classes.js",
      "messages": Array [],
      "output": "
class Component {
  componentWillMount() {
    // Do something...
  }
}

class Component {
  componentWillMount( a ) {
    // Do something...
  }
}

class Component {
  componentWillMount( a ) {
    // Do something...
  }
}
",
      "warningCount": 0,
    },
  ],
  "warningCount": 0,
}
`;

exports[`func-params-spacing applies fixes to destructuring params 1`] = `
Object {
  "errorCount": 0,
  "results": Array [
    Object {
      "errorCount": 0,
      "filePath": "/Users/neil/Projects/personal/eslint-plugin-wyze/lib/rules/__tests__/fixtures/func-params-spacing/destructuring.js",
      "messages": Array [],
      "output": "
const foo = ({ a }) => {}
const foo = ({ a }) => {}
const foo = ({ a }) => {}
const foo = ( { a }, b ) => {}
const foo = ( { a }, b ) => {}
const foo = ({ a }, b, [ c ]) => {}
const foo = ({ a }, b, [ c ]) => {}
const foo = ({ a }, b, [ c ]) => {}
",
      "warningCount": 0,
    },
  ],
  "warningCount": 0,
}
`;

exports[`func-params-spacing applies fixes to flow types 1`] = `
Object {
  "errorCount": 0,
  "results": Array [
    Object {
      "errorCount": 0,
      "filePath": "/Users/neil/Projects/personal/eslint-plugin-wyze/lib/rules/__tests__/fixtures/func-params-spacing/flowtype.js",
      "messages": Array [],
      "output": "
const foo = ( a: string ) => {}
const foo = ( a: string ) => {}
const foo = ( a: string ) => {}
const foo = ({ a }: { a: string }): void => {}
const foo = ({ a }: { a: string }): void => {}
const foo = ({ a }: { a: string }): void => {}
const foo = ( { a }: Object ): void => {}
const foo = ( { a }: Object ): void => {}
const foo = ( { a }: Object ): void => {}
",
      "warningCount": 0,
    },
  ],
  "warningCount": 0,
}
`;

exports[`func-params-spacing applies fixes to function declarations 1`] = `
Object {
  "errorCount": 0,
  "results": Array [
    Object {
      "errorCount": 0,
      "filePath": "/Users/neil/Projects/personal/eslint-plugin-wyze/lib/rules/__tests__/fixtures/func-params-spacing/function-declaration.js",
      "messages": Array [],
      "output": "
function foo( a, b, c ) {}
function foo( a, b, c ) {}
function foo( a, b, c ) {}
function foo() {}
",
      "warningCount": 0,
    },
  ],
  "warningCount": 0,
}
`;

exports[`func-params-spacing applies fixes to function expressions 1`] = `
Object {
  "errorCount": 0,
  "results": Array [
    Object {
      "errorCount": 0,
      "filePath": "/Users/neil/Projects/personal/eslint-plugin-wyze/lib/rules/__tests__/fixtures/func-params-spacing/function-expression.js",
      "messages": Array [],
      "output": "
const foo = function( a, b, c ) {}
const foo = function( a, b, c ) {}
const foo = function( a, b, c ) {}
const foo = ( a, b, c ) => {}
const foo = ( a, b, c ) => {}
const foo = ( a, b, c ) => {}
const foo = () => {}
const foo = function() {}
",
      "warningCount": 0,
    },
  ],
  "warningCount": 0,
}
`;

exports[`func-params-spacing applies fixes to multiline functions 1`] = `
Object {
  "errorCount": 0,
  "results": Array [
    Object {
      "errorCount": 0,
      "filePath": "/Users/neil/Projects/personal/eslint-plugin-wyze/lib/rules/__tests__/fixtures/func-params-spacing/multi-line.js",
      "messages": Array [],
      "output": "
const foo = ({
  a
}) => {}
const foo = ({
  a
}) => {}
const foo = ({
  a
}) => {}
",
      "warningCount": 0,
    },
  ],
  "warningCount": 0,
}
`;
